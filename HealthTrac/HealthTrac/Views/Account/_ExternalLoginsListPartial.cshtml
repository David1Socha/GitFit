@using Microsoft.Owin.Security
<head>
    @Styles.Render("~/Content/css")
    <title>Login Choices</title>
</head>
<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @Html.ActionLink("HealthTrac", "Index", "Home", null, new { @class = "navbar-brand" })
        </div>
    </div>
</div>
<div>
    <h4 style="text-align: center">Use another service to log in.</h4>
    <hr />
    @{
        var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
        if (loginProviders.Count() == 0)
        {
            <div>
                <p>
                    There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=313242">this article</a>
                    for details on setting up this ASP.NET application to support logging in via external services.
                </p>
            </div>
        }
        else
        {
            string action = Model.Action;
            string returnUrl = Model.ReturnUrl;
            using (Html.BeginForm(action, "Account", new { ReturnUrl = returnUrl }))
            {
                @Html.AntiForgeryToken()
                <div id="socialLoginList" style="text-align: center">
                    <p>
                        @foreach (AuthenticationDescription p in loginProviders)
                        {
                            <button type="submit" class="btn btn-default" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>
                        }
                    </p>
                </div>
            }
        }
    }
</div>
        
